{"ast":null,"code":"var _jsxFileName = \"/Users/eyupstudent/sites/academyServer/html/module 5 (front end tools)/finance-calculator/src/components/Form/index.js\",\n    _s = $RefreshSig$();\n\nimport SubmitButton from \"./SubmitButton\";\nimport InputBorrowAmounts from \"./InputBorrowAmounts\";\nimport InputAnnualSalary from \"./InputAnnualSalary\";\nimport InputMonthlyPercentage from \"./InputMonthlyPercentage\";\nimport { useEffect, useState } from \"react\"; //Question:\n// should I separate the calculations into a separate component?\n// How many components can i break this down into?\n//  If more components then how to lift/prop the inputted values?\n// How can I make it drier?\n\nimport Calculator from \"./Calculator\";\nimport { click } from \"@testing-library/user-event/dist/click\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Form = () => {\n  _s();\n\n  const [click, setClick] = useState(0);\n  const [borrowAmount, setBorrowAmount] = useState('');\n  const [annualSalary, setAnnualSalary] = useState('');\n  const [monthlyRepay, setMonthlyRepay] = useState('');\n  const [toPayPerMonth, setToPayPerMonth] = useState('');\n  const [payOffTimeMonths, setPayOffTimeMonths] = useState('');\n  const [payOffTimeYears, setPayOffTimeYears] = useState('');\n  const [payOffTimeWholeYears, setPayOffTimeWholeYears] = useState('');\n  const [payOffTimeExtraMonths, setPayOffTimeExtraMonths] = useState('');\n\n  const inputBorrowAmount = e => {\n    setBorrowAmount(e.target.value);\n  };\n\n  const inputAnnualSalary = e => {\n    setAnnualSalary(e.target.value);\n  };\n\n  const inputMonthlyRepay = e => {\n    setMonthlyRepay(e.target.value);\n  }; //I expected to have to lift up or prop the object but couldn't figure out how\n  // so I left this here\n  // the function is necessary but the contents isn't, why?\n\n\n  const submitAmounts = () => {\n    let inputtedValues = {\n      toBorrow: borrowAmount,\n      salary: annualSalary,\n      repayment: monthlyRepay\n    };\n    setClick(click + 1);\n    console.log(inputtedValues);\n  };\n\n  useEffect(() => {\n    let monthlySalary = annualSalary / 12;\n    let monthlyPercentageOfSalary = monthlySalary / 100 * monthlyRepay;\n    setToPayPerMonth(monthlyPercentageOfSalary.toFixed(2));\n    let monthlyPayOff = (borrowAmount / monthlyPercentageOfSalary).toFixed(0);\n    setPayOffTimeMonths(monthlyPayOff);\n    let yearlyPayOff = monthlyPayOff / 12;\n    let extraMonths = monthlyPayOff % 12;\n    setPayOffTimeYears(yearlyPayOff);\n    setPayOffTimeWholeYears(yearlyPayOff.toFixed(0));\n    setPayOffTimeExtraMonths(extraMonths);\n  }, [click]); // {Number.isInteger(payOffTimeYears) ? payOffTimeYears : payOffTimeYears.toFixed(0)}\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Amount to Borrow: \\xA3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputBorrowAmounts, {\n        value: borrowAmount,\n        change: inputBorrowAmount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Expected Annual Salary: \\xA3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputAnnualSalary, {\n        value: annualSalary,\n        change: inputAnnualSalary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Percentage of monthly salary towards repayment:\", /*#__PURE__*/_jsxDEV(InputMonthlyPercentage, {\n          value: monthlyRepay,\n          change: inputMonthlyRepay\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(SubmitButton, {\n        clicker: submitAmounts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" You plan to borrow: \\xA3\", borrowAmount === '' ? 10000 : borrowAmount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" Your expected annual salary is: \\xA3\", annualSalary === '' ? 25000 : annualSalary]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" The percentage of your monthly salary that will go towards loan repayment is: \", monthlyRepay === '' ? 10 : monthlyRepay, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"RESULTS BELOW:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Your monthly repayment will be: \\xA3\", toPayPerMonth, \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"It will take \", payOffTimeMonths > 0 ? payOffTimeMonths : '0', \" months OR \", Number.isInteger(payOffTimeYears) ? payOffTimeYears : payOffTimeWholeYears, \" years and \", payOffTimeExtraMonths > 0 ? payOffTimeExtraMonths : 0, \" months to pay off the loan.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Form, \"ZzuGSgV56BNJT8NeRyqPEyBEA50=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/eyupstudent/sites/academyServer/html/module 5 (front end tools)/finance-calculator/src/components/Form/index.js"],"names":["SubmitButton","InputBorrowAmounts","InputAnnualSalary","InputMonthlyPercentage","useEffect","useState","Calculator","click","Form","setClick","borrowAmount","setBorrowAmount","annualSalary","setAnnualSalary","monthlyRepay","setMonthlyRepay","toPayPerMonth","setToPayPerMonth","payOffTimeMonths","setPayOffTimeMonths","payOffTimeYears","setPayOffTimeYears","payOffTimeWholeYears","setPayOffTimeWholeYears","payOffTimeExtraMonths","setPayOffTimeExtraMonths","inputBorrowAmount","e","target","value","inputAnnualSalary","inputMonthlyRepay","submitAmounts","inputtedValues","toBorrow","salary","repayment","console","log","monthlySalary","monthlyPercentageOfSalary","toFixed","monthlyPayOff","yearlyPayOff","extraMonths","Number","isInteger"],"mappings":"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","sourcesContent":["import SubmitButton from \"./SubmitButton\";\nimport InputBorrowAmounts from \"./InputBorrowAmounts\";\nimport InputAnnualSalary from \"./InputAnnualSalary\";\nimport InputMonthlyPercentage from \"./InputMonthlyPercentage\";\nimport {useEffect, useState} from \"react\";\n\n//Question:\n// should I separate the calculations into a separate component?\n// How many components can i break this down into?\n//  If more components then how to lift/prop the inputted values?\n// How can I make it drier?\n\nimport Calculator from \"./Calculator\";\nimport {click} from \"@testing-library/user-event/dist/click\";\n\n\nconst Form = () => {\n    const [click, setClick] = useState(0)\n    const [borrowAmount, setBorrowAmount] = useState('')\n    const [annualSalary, setAnnualSalary] = useState('')\n    const [monthlyRepay, setMonthlyRepay] = useState('')\n    const [toPayPerMonth, setToPayPerMonth] = useState('')\n    const [payOffTimeMonths, setPayOffTimeMonths] = useState('')\n    const [payOffTimeYears, setPayOffTimeYears] = useState('')\n    const [payOffTimeWholeYears, setPayOffTimeWholeYears] = useState('')\n    const [payOffTimeExtraMonths, setPayOffTimeExtraMonths] = useState('')\n\n    const inputBorrowAmount = (e) => {\n        setBorrowAmount(e.target.value)\n    }\n\n    const inputAnnualSalary = (e) => {\n        setAnnualSalary(e.target.value)\n    }\n\n    const inputMonthlyRepay = (e) => {\n        setMonthlyRepay(e.target.value)\n    }\n\n//I expected to have to lift up or prop the object but couldn't figure out how\n// so I left this here\n// the function is necessary but the contents isn't, why?\n\n    const submitAmounts = () => {\n        let inputtedValues = {\n            toBorrow: borrowAmount,\n            salary: annualSalary,\n            repayment: monthlyRepay\n        }\n        setClick(click + 1)\n      console.log(inputtedValues)\n    }\n\n    useEffect (() => {\n        let monthlySalary = annualSalary/12\n        let monthlyPercentageOfSalary = ((monthlySalary/100) * monthlyRepay)\n        setToPayPerMonth(monthlyPercentageOfSalary.toFixed(2))\n        let monthlyPayOff = (borrowAmount/monthlyPercentageOfSalary).toFixed(0)\n        setPayOffTimeMonths(monthlyPayOff)\n        let yearlyPayOff = monthlyPayOff/12\n        let extraMonths = monthlyPayOff % 12\n        setPayOffTimeYears(yearlyPayOff)\n        setPayOffTimeWholeYears(yearlyPayOff.toFixed(0))\n        setPayOffTimeExtraMonths(extraMonths)\n\n    }, [click])\n\n    // {Number.isInteger(payOffTimeYears) ? payOffTimeYears : payOffTimeYears.toFixed(0)}\n\n    return (\n        <>\n            {/*Question:*/}\n            {/*I tried setting min/max for monthly percentage but wouldn't work*/}\n            <div>\n                <label>Amount to Borrow: £</label>\n                <InputBorrowAmounts value={borrowAmount} change={inputBorrowAmount} />\n            </div>\n             <div>\n                <label>Expected Annual Salary: £</label>\n                <InputAnnualSalary value={annualSalary} change={inputAnnualSalary} />\n            </div>\n            <div>\n                <label>Percentage of monthly salary towards repayment:\n                <InputMonthlyPercentage value={monthlyRepay} change={inputMonthlyRepay} />%</label>\n            </div>\n            <div>\n                <SubmitButton clicker={submitAmounts} />\n            </div>\n            <div>\n                <p> You plan to borrow: £{borrowAmount === '' ? 10000 : borrowAmount}</p>\n                <p> Your expected annual salary is: £{annualSalary === '' ? 25000 : annualSalary}</p>\n                <p> The percentage of your monthly salary that will go towards loan repayment is: {monthlyRepay === '' ? 10 : monthlyRepay}%</p>\n            </div>\n            <br />\n            <p>RESULTS BELOW:</p>\n            <div className=\"results\">\n                <p>Your monthly repayment will be: £{toPayPerMonth}.</p>\n                <p>It will take {payOffTimeMonths > 0 ? payOffTimeMonths : '0'} months OR {Number.isInteger(payOffTimeYears) ? payOffTimeYears : payOffTimeWholeYears} years and {payOffTimeExtraMonths > 0 ? payOffTimeExtraMonths : 0 } months to pay off the loan.</p>\n            </div>\n        </>\n    )\n}\n\nexport default Form\n"]},"metadata":{},"sourceType":"module"}